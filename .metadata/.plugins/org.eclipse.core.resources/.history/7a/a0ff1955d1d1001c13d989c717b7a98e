package com.cisco.training.service;

import static org.junit.jupiter.api.Assertions.assertTrue;

import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.extension.ExtendWith;
import org.mockito.Mock;
import org.mockito.Mockito;
import org.mockito.junit.jupiter.MockitoExtension;

import com.cisco.training.dal.ProductDAO;
import com.cisco.training.domain.Product;

@ExtendWith(MockitoExtension.class)
public class MockitoAnnoBasedProductServiceImplTest {
	
	@Mock
	SMSGateway mockGateway;
	@Mock
	ProductDAO mockDao;
	
	@Test
	void addNewProduct_Returns_A_Valid_Id_When_ProductValue_GTEQ_MinValue() {
		//AAA
		//Arrange
		ProductServiceImpl objectUnderTest = new ProductServiceImpl();
		Product productParam = new Product("test", ProductServiceImpl.PRODUCT_MIN_VALUE + 1, 1);
		Product returnFromMock = new Product("test", ProductServiceImpl.PRODUCT_MIN_VALUE + 1, 1);
		returnFromMock.setId(1);
				
		Mockito.when(mockDao.save(productParam)).thenReturn(returnFromMock);
		
		objectUnderTest.setGateway(mockGateway);
		objectUnderTest.setDao(mockDao);
		
		//Act
		int id = objectUnderTest.addNewProduct(productParam);
		
		//Assert
		assertTrue(id > 0);
//		Mockito.verify(mockGateway,Mockito.times(1)).sendSMS("98000", "sms");
	}

}